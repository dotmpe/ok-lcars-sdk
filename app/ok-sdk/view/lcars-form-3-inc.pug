mixin ok-sdk-form-3(o, title="Form 1.3")
  //-
    The iconic double-elbow split-view LCARS layout:
    Two vertically stacked frames with the characteristic double elbow.
    One vertical varying-width column bar, and two decorative horizontal
    bars. Splitting the viewscreen around 30% from the top.

  -
    o = ok.NewElementOptions(o || {}, {
          "title": title || "BF-3"
        }, attributes);
    let oDef = {
      "title": title,
      "header": {
        "column": [],
        "elbow": {
          "class": "bg-cat-tng-2369a-pale-brown flexcv default",
        },
        "content": { "color": o.color, "size": o.size },
        "row": [
          { "class": "bar bg-grey-5 flexch" },
        ]
      },
      "body": {
        "elbow": {
          "class": "bg-cat-8-4 default flexcv",
        },
        "row": [
          { "class": "bar bg-cat-8-4 flexch" },
        ],
        "column": [],
        "content": { "color": o.color, "size": o.size },
        "default": {
          "paragraphs": 12,
          "header": { "class": "text-5-3", "_": "OK Form 3" },
          "body": { "class": "text-1-1 capital" }
        }
      }
    };
    o = lodash.defaultsDeep( {}, o, oDef );

  .form-1_3.pane.flexv&attributes(attributes)

    // Header: the upper-section frame is the smaller part
    .f13-1.header.flexcv.flexh

      // Header Column
      .f13-1-1.frame.column.flexv
        for element in o.header.column
          +ok-element-instance(element, "div")

        .elbow.bottom-left&attributes(o.header.elbow)
          .bar
            .block
            .triangle

      .f13-1-2.flexch.flexv
        // Header Content
        .f13-1-2-1.flexcv
          if o[''] && o[''].length > 0 && o[''][0].length
            +ok-element({'': o[''][0]}, o.header.content || {})

        // Header Bar Row: the cells right after the upper-section elbow
        .f13-1-2-2.frame.flexh
          for element in o.header.row
            +ok-element-instance(element, "div")

    //.f13-2.row.split
    //  - length = 100
    //  - width = 100
    //  .block.bg-cat-6-1(style=`min-height: 19; top: -7; left: calc( ${length} + ${width} + 34 )`)
    //  .block.bg-grey-6( style=`min-height: 19; top: -7; left: calc( ${length} + ${width} + 34 )`)

    // Body: the lower-section frame around 3/4 or similar of the height
    .f13-2.body.flexcv.flexh
      // Body Button Column: The lower-section elbow and cells beneath
      .f13-2-1.frame.flexv
        .elbow.top-left&attributes(o.body.elbow)
          .bar
            .block
            .triangle

        for element in o.body.column
          +ok-element-instance(element, "div")

      .f13-2-2.content.flexch
        //- Body Bar Row: the cells right after the lower-section top-right elbow
        .f13-2-2-1.frame.flexh
          for element in o.body.row
            +ok-element-instance(element, "div")

        // Body Content
        .f13-2-2-2.content
          +ok-prev-next-form(o, '/forms?merge.data=')
          if o[''] && o[''].length > 1 && o[''][1].length
            +ok-element({'': o[''][1]}, o.body.content || {})
          else
            block

  // FIXME: default content. above if/else it not working OK. Should use 'o'-data defaults.

  //          +ok-sdk-placeholder(o.color)

  //          h3.text&attributes(o.body.default.header)= o.body.default.header._
  //          p.text-2-3.text
  //            | A frame enclosing two content panes, with a characteristic split

  //          - let n = 0
  //          while n < o.body.default.paragraphs
  //            - n++; l = Math.round(Math.random() * 7)
  //            +lorem-ipsum-paragraph(l)&attributes(o.body.default.body)

  //          h4.text&attributes(o.body.default.header) The end
